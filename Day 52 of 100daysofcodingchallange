geeks Problem link;-https://practice.geeksforgeeks.org/problems/adding-ones3628/1
leet problem link;-https://leetcode.com/problems/snapshot-array/description/
geekscode;-

class Solution{
    public:
    void update(int a[], int n, int updates[], int k)
    {
        for(int i = 0; i<k; i++){
            int update = updates[i];
            a[update-1]++;
        }
        for(int i = 1; i<n; i++){
            a[i] += a[i-1];
        }
    }
};

leetcode;-

class SnapshotArray {
    TreeMap<Integer, Integer>[] Tm;
    int snap_id = 0;
    public SnapshotArray(int length) {
        Tm = new TreeMap[length];
        for (int i = 0; i < length; i++) {
            Tm[i] = new TreeMap<Integer, Integer>();
            Tm[i].put(0, 0);
        }
    }

    public void set(int index, int val) {
        Tm[index].put(snap_id, val);
    }

    public int snap() {
        return snap_id++;
    }

    public int get(int index, int snap_id) {
        return Tm[index].floorEntry(snap_id).getValue();
    }
}

/**
 * Your SnapshotArray object will be instantiated and called as such:
 * SnapshotArray obj = new SnapshotArray(length);
 * obj.set(index,val);
 * int param_2 = obj.snap();
 * int param_3 = obj.get(index,snap_id);
 */
