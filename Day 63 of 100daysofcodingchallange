Geeks Problem Link:- https://practice.geeksforgeeks.org/problems/unique-rows-in-boolean-matrix/1
Leet code;- https://leetcode.com/problems/count-all-possible-routes/description/

#Geekscode:-
class Solution
{
    public:
    vector<vector<int>> uniqueRow(int M[MAX][MAX],int row,int col)
    {
        vector<vector<int>> temp(row, vector<int>(col)), ans;
        for(int i = 0 ; i < row ; i++) {
            for(int j = 0 ; j < col ; j++) {
                temp[i][j] = M[i][j];
            }
        }
        map<vector<int>, int> m;
        for(auto i : temp) {
            m[i]++;
        }
        for(auto i : temp) {
            if(m[i]) {
                ans.push_back(i);
                m[i] = 0;
            }
        }
        return ans;
}
};

#Leetcode;-
class Solution {
    public int countRoutes(int[] locations, int start, int finish, int fuel) {
        final int MOD = 1000000007;
        int n = locations.length;
        
        int[][] dp = new int[n][fuel + 1];
        for (int f = 0; f <= fuel; f++) {
            dp[finish][f] = 1;
        }
        
        for (int f = 0; f <= fuel; f++) {
            for (int city = 0; city < n; city++) {
                for (int nextCity = 0; nextCity < n; nextCity++) {
                    if (nextCity != city && f >= Math.abs(locations[nextCity] - locations[city])) {
                        dp[city][f] = (dp[city][f] + dp[nextCity][f - Math.abs(locations[nextCity] - locations[city])]) % MOD;
                    }
                }
            }
        }
        
        return dp[start][fuel];
    }
}
