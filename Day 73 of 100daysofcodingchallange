Geeks Problem link:- https://practice.geeksforgeeks.org/problems/quick-sort/1
Leet Problem Link;- https://leetcode.com/problems/minimum-size-subarray-sum/description/
Geek Code;-
class Solution
{
    public:
    //Function to sort an array using quick sort algorithm.
    void quickSort(int arr[], int low, int high)
    {
       if(low<high){
           int p=partition(arr,low,high);
           quickSort(arr,low,p-1);
           quickSort(arr,p+1,high);
       }
    }
    
    public:
    int partition (int arr[], int low, int high)
    {
        int pivot=arr[low];
        int i=low;
        int j=high;
        while(i<j){
            while(arr[i]<=pivot && i<=high-1){
                i++;
            }
            while(arr[j]>pivot && j>=low+1){
                j--;
            }
            if(i<j){
           swap(arr[i],arr[j]);
        }
        }
       swap(arr[j],arr[low]);
       return j;
    }
};
Leet code;
class Solution {
    public int minSubArrayLen(int target, int[] nums) {
        int l=0,r=0,res=Integer.MAX_VALUE,s=0;
        for(r=0;r<nums.length;r++){
              s+=nums[r];
              while(s>=target){
                  s-=nums[l];
                  res = Math.min(res,r-l+1);
                  l++;
              }
        }
        if(res==Integer.MAX_VALUE)
        return 0;
        return res;
    }
}
